name: Deploy Repos A and B

on:
  push:
    branches:
      - '!main'
      - 'feature_version1'

jobs:
  deploycodeA:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from Repo A
        uses: actions/checkout@v2
        with:
          repository: kalpanauppara/regional_repo
          ref: ${{ github.event.ref }}
      
      # ... other steps to prepare Repo A code ...

      - name: Set output for test.sh
        id: set-output-test-sh
        run: echo "::set-output name=test::$(cat mycode/test.sh)"

  deploycodeB:
    runs-on: ubuntu-latest
    needs: deploycodeA
    steps:
      - name: Checkout code from Repo B
        uses: actions/checkout@v2
        with:
          repository: kalpanauppara/global_repo
          ref: Feature_branch

      # ... other steps to prepare Repo B code ...

      - name: Set output for test.py
        id: set-output-test-py
        run: echo "::set-output name=test::$(cat mysourcecode/test.py)"

  mergeAndDeploy:
    runs-on: ubuntu-latest
    needs:
      - deploycodeA
      - deploycodeB
    steps:
      - name: Create the content_deploy directory
        run: mkdir content_deploy

      - name: Copy test.sh from Repo A to content_deploy
        run: echo "${{ needs.deploycodeA.outputs.test }}" > content_deploy/test.sh

      - name: Copy test.py from Repo B to content_deploy
        run: echo "${{ needs.deploycodeB.outputs.test }}" > content_deploy/test.py

      - name: List contents of content_deploy
        run: ls -lrt content_deploy

  
  deploy-to-salesforce:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Salesforce CLI
        run: |
          # Install Salesforce CLI
          curl -s https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJf -
          sudo mv sfdx /usr/local/bin/
        if: steps.setup-env.outputs.setup-complete == 'true'

      - name: Authenticate with Salesforce
        run: |
          # Authenticate with Salesforce (use your own authentication method)
          sfdx force:auth:web:login -a myorg
        if: steps.setup-env.outputs.setup-complete == 'true'

      - name: Deploy to Salesforce
        run: |
          # Deploy to Salesforce
          sfdx force:source:deploy -p content_deploy/ -u ${secrets.SALESFORCE_DEVHUB_USERNAME}

